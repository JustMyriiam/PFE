package com.satoripop.insurance.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InsurancePackAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePackAllPropertiesEquals(InsurancePack expected, InsurancePack actual) {
        assertInsurancePackAutoGeneratedPropertiesEquals(expected, actual);
        assertInsurancePackAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePackAllUpdatablePropertiesEquals(InsurancePack expected, InsurancePack actual) {
        assertInsurancePackUpdatableFieldsEquals(expected, actual);
        assertInsurancePackUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePackAutoGeneratedPropertiesEquals(InsurancePack expected, InsurancePack actual) {
        assertThat(actual)
            .as("Verify InsurancePack auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePackUpdatableFieldsEquals(InsurancePack expected, InsurancePack actual) {
        assertThat(actual)
            .as("Verify InsurancePack relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDesciption()).as("check desciption").isEqualTo(expected.getDesciption()))
            .satisfies(a -> assertThat(a.getPrice()).as("check price").isEqualTo(expected.getPrice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePackUpdatableRelationshipsEquals(InsurancePack expected, InsurancePack actual) {
        assertThat(actual)
            .as("Verify InsurancePack relationships")
            .satisfies(a -> assertThat(a.getWarranties()).as("check warranties").isEqualTo(expected.getWarranties()))
            .satisfies(a -> assertThat(a.getVehicle()).as("check vehicle").isEqualTo(expected.getVehicle()));
    }
}
