package com.satoripop.insurance.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuoteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteAllPropertiesEquals(Quote expected, Quote actual) {
        assertQuoteAutoGeneratedPropertiesEquals(expected, actual);
        assertQuoteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteAllUpdatablePropertiesEquals(Quote expected, Quote actual) {
        assertQuoteUpdatableFieldsEquals(expected, actual);
        assertQuoteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteAutoGeneratedPropertiesEquals(Quote expected, Quote actual) {
        assertThat(actual)
            .as("Verify Quote auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteUpdatableFieldsEquals(Quote expected, Quote actual) {
        assertThat(actual)
            .as("Verify Quote relevant properties")
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()))
            .satisfies(a -> assertThat(a.getEstimatedAmount()).as("check estimatedAmount").isEqualTo(expected.getEstimatedAmount()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuoteUpdatableRelationshipsEquals(Quote expected, Quote actual) {
        assertThat(actual)
            .as("Verify Quote relationships")
            .satisfies(a -> assertThat(a.getVehicle()).as("check vehicle").isEqualTo(expected.getVehicle()))
            .satisfies(a -> assertThat(a.getClient()).as("check client").isEqualTo(expected.getClient()));
    }
}
