package com.satoripop.insurance.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClaimAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClaimAllPropertiesEquals(Claim expected, Claim actual) {
        assertClaimAutoGeneratedPropertiesEquals(expected, actual);
        assertClaimAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClaimAllUpdatablePropertiesEquals(Claim expected, Claim actual) {
        assertClaimUpdatableFieldsEquals(expected, actual);
        assertClaimUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClaimAutoGeneratedPropertiesEquals(Claim expected, Claim actual) {
        assertThat(actual)
            .as("Verify Claim auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClaimUpdatableFieldsEquals(Claim expected, Claim actual) {
        assertThat(actual)
            .as("Verify Claim relevant properties")
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClaimUpdatableRelationshipsEquals(Claim expected, Claim actual) {
        assertThat(actual)
            .as("Verify Claim relationships")
            .satisfies(a -> assertThat(a.getClient()).as("check client").isEqualTo(expected.getClient()))
            .satisfies(a -> assertThat(a.getContract()).as("check contract").isEqualTo(expected.getContract()));
    }
}
